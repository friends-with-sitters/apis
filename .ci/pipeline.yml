AWSTemplateFormatVersion: '2010-09-09'

Description: "Regional API DNS Setup for Domain"

Parameters:

  Repository:
    Type: String
    AllowedPattern: "^[-_a-zA-Z0-9]+/[-_a-zA-Z0-9]+$"
    ConstraintDescription: |
      Ensure you have defined a full path, including the username or
      organisation name.
    Description: |
      The full name of the repository, such as "<username>/<name>".

  Branch:
    Type: String
    AllowedPattern: "^[-_a-zA-Z0-9]+$"
    ConstraintDescription: |
      Only alpha numeric characters, as well as "-" and "_" are allowed.
    Description: |
      Branch to use from the repository.

Mappings:

  RegionNamesToIDs:
    NorthVirginia:
      Region: us-east-1
    London:
      Region: eu-west-2

Resources:

  NorthVirginiaRegion:
    Type: Custom::GlobalImports
    Properties:
      ServiceToken: !ImportValue GlobalImportValue
      SourceRegion: !FindInMap [ RegionNamesToIDs, NorthVirginia, Region ]
      Exports:
        - 'Key'
        - 'Artifacts'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !ImportValue CodePipelineExecutionRole
      RestartExecutionOnUpdate: true
      ArtifactStores:
        - Region: !Ref AWS::Region
          ArtifactStore:
            Type: S3
            EncryptionKey: 
              Id: !ImportValue Key
              Type: KMS
            Location: !ImportValue Artifacts
        - Region: !FindInMap [ RegionNamesToIDs, NorthVirginia, Region ]
          ArtifactStore:
            Type: S3
            EncryptionKey: 
              Id: !GetAtt NorthVirginiaRegion.Key
              Type: KMS
            Location: !GetAtt NorthVirginiaRegion.Artifacts
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: GitHubOutput
              Configuration:
                Owner: !Select [ 0, !Split [ "/", !Ref Repository ] ]
                Repo: !Select [ 1, !Split [ "/", !Ref Repository ] ]
                Branch: !Ref Branch
                OAuthToken: !Sub [ "{{resolve:secretsmanager:${Id}:SecretString:token}}", Id: !ImportValue GitHubSecret ]
                PollForSourceChanges: false
        - Name: Pipeline
          Actions:
            - Name: Update
              RunOrder: 1
              Region: !Ref AWS::Region
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: GitHubOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !ImportValue CloudFormationExecutionRole
                StackName: !Ref AWS::StackName
                TemplatePath: GitHubOutput::.ci/pipeline.yml
                ParameterOverrides: !Sub |
                  {
                    "Repository": "${Repository}",
                    "Branch": "${Branch}"
                  }
        - Name: Deploy
          Actions:
            - Name: Service@London
              RunOrder: 1
              Region: !Ref AWS::Region
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: GitHubOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !ImportValue CloudFormationExecutionRole
                StackName: !Sub "${AWS::StackName}-service"
                TemplatePath: GitHubOutput::.ci/service.yml
            - Name: Service@N.Virginia
              RunOrder: 1
              Region: !FindInMap [ RegionNamesToIDs, NorthVirginia, Region ]
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: GitHubOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !ImportValue CloudFormationExecutionRole
                StackName: !Sub "${AWS::StackName}-service"
                TemplatePath: GitHubOutput::.ci/service.yml
        - Name: Build
          Actions:
            - Name: Build
              RunOrder: 1
              InputArtifacts:
                - Name: GitHubOutput
              OutputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref Build
                PrimarySource: SourceOutput
        - Name: Services
          Actions:
            - Name: Locations
              RunOrder: 1
              Region: !Ref AWS::Region
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !ImportValue CloudFormationExecutionRole
                StackName: !Sub "${AWS::StackName}-service-locations"
                TemplatePath: BuildOutput::locations.yml
                ParameterOverrides: !Sub 
                  - |
                      {
                        "UserPoolArn": "${UserPoolArn}"
                      }
                  - UserPoolArn: !ImportValue UserPoolArn

  PipelineTrigger:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Ref AWS::StackName
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: !GetAtt Pipeline.Version
      TargetAction: GitHub
      RegisterWithThirdParty: true

  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !ImportValue Key
      ServiceRole: !ImportValue CodeBuildExecutionRole
      Source:
        BuildSpec: .ci/buildspec.yml
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:8.11.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: S3_BUCKET
            Type: PLAINTEXT
            Value: !ImportValue Artifacts
          - Name: KMS_KEY
            Type: PLAINTEXT
            Value: !ImportValue Key
      Artifacts:
        Type: CODEPIPELINE

Outputs:

  # BuildConsoleURL:
  #   Description: Build URL
  #   Value: !Sub "https://console.aws.amazon.com/codebuild/home?region=${AWS::Region}#/projects/${Build}/view"

  PipelineConsoleURL:
    Description: Pipeline URL
    Value: !Sub "https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}"